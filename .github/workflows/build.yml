name: SonarQube Scan and Auto Merge PR

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  pull-requests: write
  contents: write

jobs:
  # Job for SonarQube scan
  sonarqube-scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=aniketbancapp_sonar-samples
            -Dsonar.projectName="Sonar Samples"
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      # Fetch SonarQube metrics and check code coverage
      - name: Get SonarQube Project Metrics
        id: get_metrics
        run: |
          # Fetch the SonarQube project metrics using SonarQube API
          SONAR_PROJECT_KEY="aniketbancapp_sonar-samples"
          RESPONSE=$(curl -s -u ${{ secrets.SONAR_TOKEN }} "${{ secrets.SONAR_HOST_URL }}/api/measures/component?component=${SONAR_PROJECT_KEY}&metricKeys=coverage")
          echo "API Response: $RESPONSE"  # Log the raw response
          
          # Extract coverage value
          COVERAGE=$(echo $RESPONSE | jq -r '.component.measures[0].value')
          echo "Code coverage is: $COVERAGE"

          # Check if the coverage is below 95%
          if [ "$COVERAGE" == "null" ]; then
            echo "Error: Unable to fetch coverage data."
            exit 1  # Fail the job if coverage data is null
          fi

          # Check if the coverage is below 95%
          if (( $(echo "$COVERAGE < 95" | bc -l) )); then
            echo "Error: Code coverage is below 95%. Coverage: $COVERAGE%"
            exit 1  # Fail the job if coverage is below 95%
          fi

      - name: SonarQube Quality Gate Check
        id: quality_gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          sonar_host_url: ${{ secrets.SONAR_HOST_URL }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}

  # Job for auto merging PR after SonarQube scan
  auto-merge:
    name: Auto Merge PR
    runs-on: ubuntu-latest
    needs: sonarqube-scan  # This ensures the merge happens after the scan
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Auto Merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          gh pr merge $PR_NUMBER --auto --squash
